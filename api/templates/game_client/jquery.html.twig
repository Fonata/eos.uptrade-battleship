{% extends 'base.html.twig' %}

{% block body %}
    <style>
        .game-wrapper {
            margin: 1em 30px;
            max-width: 800px;
            width: 95%;
            font: 18px/1.5 sans-serif;
        }

        li {
            cursor: pointer;
            text-decoration: underline;
        }

        #ocean {
            transform: translate(6px, 298px) skew(-35deg, 30deg);
            color: blue;
            box-shadow: 4px 5px 15px 5px #000000;
        }

        #target_ocean {
            transform: translate(349px, -67px) skew(2deg, 30deg);
        }

        #target_ocean td.not-shot-yet:hover {
            background: #ffffaa;
            cursor: pointer;
        }

        .ocean td {
            border-width: 1px;
            border-style: solid;
            border-color: white;
        }

        .ship.horizontal {
            border-top-color: red;
            border-bottom-color: red;
        }

        .ship.horizontal.first {
            border-left-color: red;
        }

        .ship.horizontal.last {
            border-right-color: red;
        }

        .ship.vertical {
            border-left-color: red;
            border-right-color: red;
        }

        .ship.vertical.first {
            border-top-color: red;
        }

        .sunk {
            background-color: #800;
        }

        .ship.vertical.last {
            border-bottom-color: red;
        }

        .ocean {
            border-collapse: separate;
            border-spacing: unset;
            display: inline-block;
            box-shadow: 4px 5px 15px 5px #000000;
            padding: 8px;
            border: 10px solid #442222;
            background-color: #3caab5;
        }

        .hit {
            color: red;
        }

        .miss {
            color: white;
        }

        #stats {
            width: 100px;
            position: absolute;
            left: 625px;
            top: 200px;
            white-space: nowrap;
        }

        #winner {
            display: none;
            font-size: 60px;
            margin: 0 auto;
            position: absolute;
            top: 476px;
            left: 180px;
        }

    </style>
    <script src="{{ asset('js/jquery-1.11.1.min.js') }}"></script>

    <div class="breadcrumb"><a href="{{ path('front_page') }}">Home</a></div>
    <h1>Schiffe versenken</h1>
    <div class="game-wrapper">
        Wählen Sie ein Spiel:
        <ul id="games">
            <li>Will be replaced by actual games</li>
        </ul>
        <div id="gameField">
            <table id="target_ocean" class="ocean"></table>
            <table id="ocean" class="ocean"></table>
            <table id="stats">
                <tr>
                    <th>Treffer:</th>
                    <td id="hits"></td>
                </tr>
                <tr>
                    <th>letzter Gegnerschuss:</th>
                    <td id="last_shot"></td>
                </tr>
            </table>
        </div>
        <div id="winner"></div>
        <script>
            const $gameField = $('#gameField').hide();
            const $ocean = $('#ocean');
            const $targetOcean = $('#target_ocean');
            const $ul = $('ul#games').empty();
            const $winner = $('#winner');

            $.get('/login', function (data) {
                $.get(data.current_user, function (user) {
                    for (const gameKey in user.games) {
                        // noinspection JSUnfilteredForInLoop
                        $.get(user.games[gameKey], addLiFromGame);
                    }
                    $ul.append($('<li>Neues Spiel</li>').click(startNewGame));
                });
            });

            function addLiFromGame(game) {
                let li = $('<li data-game="' + game['@id'] + '">' + game.created + '</li>').click(continueExistingGame);
                $ul.prepend(li);
                return li;
            }

            function startNewGame() {
                $.ajax({
                    url: '/api/games',
                    headers: {'Content-Type': 'application/json'},
                    method: 'POST',
                    data: '{}',
                    success: (game) => {
                        addLiFromGame(game).click();
                    }
                });
            }

            /**
             *
             * @param {jQuery} $ocean
             * @param {string} oceanData
             *   110 characters describing the ocean.
             * @param {function} mapper
             *   A function converting the characters in the ocean to DOM elements.
             */
            function fillOcean($ocean, oceanData, mapper) {
                let header_row = '<td></td>';
                for (let i = 1; i <= 10; i++) {
                    header_row += '<td>' + i + '</td>';
                }
                $ocean.html('<tr>' + header_row + '</td>');
                let $row = $('<tr></tr>');
                for (let i = 0; i < 110; i++) {
                    let c = oceanData[i];
                    let letter = String.fromCharCode(65 + Math.floor(i / 11));
                    if (c === '\n') {
                        $row.prepend('<td>' + letter + '</td>');
                        $ocean.append($row);
                        $row = $('<tr></tr>');
                        continue;
                    }

                    let col = i % 11 + 1;
                    /** @type {string} coordinate, for example "D4" */
                    let coordinate = letter + col;

                    let $span = $(mapper(c, coordinate));
                    $row.append($span.attr('id', coordinate))
                }
            }

            function getClassFromChar(char) {
                if (char === "S") {
                    return 'hit sunk';
                }
                if (char === "H") {
                    return 'hit';
                }
                if (char === "M") {
                    return 'miss'
                }
                return '';
            }

            function continueExistingGame() {
                let fillGameField = (game) => {
                    function count(char) {
                        let found = 0;
                        for (let i = 0; i < 110; i++) {
                            if (game.target_ocean[i] === char) found++;
                        }
                        return found;
                    }

                    $gameField.show();
                    $('#last_shot').text(game.last_shot_target + '. ' + game.last_shot_result);
                    let hits = count('H') + count('S');
                    let misses = count('M');
                    $('#hits').html('<span title="Treffer">' + hits + '</span>/<span title="Schüsse">' + (hits + misses) + '</span>');
                    fillOcean($ocean, game.ocean, (char, coordinate) => {
                        let classes = '';
                        for (let ship in game.ships) {
                            let positions = game.ships[ship];
                            let direction = '';
                            for (let posKey = 0; posKey < positions.length; posKey++) {
                                if (positions[posKey] === coordinate) {
                                    classes += " ship " + ship;
                                    let currLetter = positions[0].substr(0, 1);
                                    let nextLetter = positions[1].substr(0, 1);
                                    classes += currLetter === nextLetter ? " horizontal" : " vertical"
                                    if (posKey === 0) {
                                        classes += ' first';
                                    }
                                    if (posKey === positions.length - 1) {
                                        classes += ' last';
                                    }
                                }
                            }
                        }
                        classes += ' ' + getClassFromChar(char);
                        if (char !== ".") {
                            // A peg was placed:
                            return '<td class="' + classes + ' hit">●</td>';
                        }

                        // No peg yet:
                        return '<td class="' + classes + '">◌</td>';
                    });
                    fillOcean($targetOcean, game.target_ocean, (char, coordinate) => {
                        if (char === '.') {
                            if (game.winner) {
                                return '<td>◌</td>';
                            }
                            return '<td class="not-shot-yet">◌</td>';
                        }
                        return '<td class="' + getClassFromChar(char) + '">●</td>';
                    });
                    for (let ship in game.ships) {
                        let $ship = $('.' + ship);
                        $ship.attr('title', ship.charAt(0).toUpperCase() + ship.slice(1))
                            .hover(
                                function () {
                                    $ship.css('background-color', 'yellow')
                                },
                                function () {
                                    $ship.css('background-color', '')
                                },
                            );
                    }
                    $gameField.css('opacity', game.winner ? 0.3 : 1);

                    $winner.toggle(!!game.winner);
                    if (game.winner) {
                        $winner.text(game.winner === 'Player' ? 'Du hast gewonnen!' : 'Du hast verloren!');
                        return;
                    }
                    $('.not-shot-yet', $targetOcean).click(function () {
                        let $td = $(this);
                        $.ajax({
                            url: game['@id'] + '/shoot',
                            headers: {'Content-Type': 'application/json'},
                            method: 'POST',
                            data: '{"target": "' + $td.attr('id') + '"}',
                            success: (game) => {
                                fillGameField(game);
                            }
                        });
                    });
                };
                $.get($(this).data('game'), fillGameField);
            }
        </script>
    </div>
{% endblock %}
